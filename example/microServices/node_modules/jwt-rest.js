var router = require('qewd-router');
var routes;

function test(args, finished) {
  console.log('test: ' + JSON.stringify(args));
  finished({test: 'ok'});
}

function check(args, finished) {
  console.log('check: ' + JSON.stringify(args));
  finished({check: args.session.userText});
}

function login(args, finished) {
  console.log('login: ' + JSON.stringify(args));

  var username = args.req.body.username;
  var password = args.req.body.password;
  console.log('username: ' + username + '; password: ' + password);

  if (username === 'rob' && password === 'secret') {


    var session = this.jwt.handlers.createRestSession.call(this, args);

    session.userText = 'Rob';
    session.username = username;
    session.authenticated = true;
    session.timeout = 60;

    session.makeSecret('username');

    var jwt = this.jwt.handlers.setJWT.call(this, session);

    finished({ok: true, token: jwt});
  }
  else {
    finished({error: 'invalid login'});
  }
}


module.exports = {

  init: function() {

    routes = [
      {
        url: '/api/test',
        method: 'GET',
        handler: test
      },
      {
        url: '/api/login',
        method: 'POST',
        handler: login
      },
      {
        url: '/api/check',
        method: 'GET',
        handler: check
      }
    ];
    routes = router.initialise(routes, module.exports);

  },

  restModule: true,

  beforeHandler: function(messageObj, finished) {

    console.log('beforeHandler - messageObj = ' + JSON.stringify(messageObj));

    //if (messageObj.expressType === 'auth0-register') return;

    if (messageObj.path !== '/api/login' && messageObj.path !== '/api/test') {

      // authenticate the request

      var status = this.jwt.handlers.validateRestRequest.call(this, messageObj);
      console.log('*** validation status = ' + JSON.stringify(status));
      if (status.error) {
        finished(status);
        return false;
      }
      messageObj.session = status.session;
    }
  },

  afterHandler: function(messageObj, finished) {
    console.log('*** after handler ***');
    // no after handler applies
  }

};
